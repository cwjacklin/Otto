!obj:pylearn2.train.Train {
  dataset: &train !obj:pylearn2.datasets.csv_dataset.CSVDataset {
    path: '../../Data/train_pylearn2.csv',
    task: 'classification',
    start_fraction: .8,
  },
  model: !obj:pylearn2.models.autoencoder.DenoisingAutoencoder {
    nvis: 93,
    nhid: 200,
    irange: .05,
    corruptor: !obj:pylearn2.corruption.BinomialCorruptor {
      corruption_level: .2,
    },
  act_enc: "tanh",
  act_dec: null,  # Linear activation on the decoder side.
  },
  algorithm: !obj:pylearn2.training_algorithms.sgd.SGD {
    learning_rate: 1e-3,
    batch_size: 1000,
    monitoring_batches: 5,
    monitoring_dataset: *train,
    cost: !obj:pylearn2.costs.autoencoder.MeanSquaredReconstructionError {},
    termination_criterion: !obj:pylearn2.termination_criteria.EpochCounter {
      max_epochs: 20,
    },
  },
  save_path: "./dae_l1.pkl",
  save_freq: 1
}
